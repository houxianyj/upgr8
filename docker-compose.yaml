# The latest docker version, docker-compose file created at 12-11-2020.
version: '3.8'

# The network used to communicate.
networks:
    backend:
        driver: bridge
        ipam:
            driver: default
            config:
                - subnet: 172.28.0.0/24

# Volumes used for this environment.
volumes:
    database:

# The services which will be running for this project.
services:

    # This references to the Dockerfile in "./docker/php".
    php:
        build:
            context: ./docker/php
            args:
                version: ${DOCKER_PHP_VERSION}
        working_dir: /var/www/html/
        container_name: ${DOCKER_CONTAINER_NAME}.php
        hostname: backend.${DOCKER_CONTAINER_NAME}.php
        environment:
            # generic
            TZ: ${DOCKER_CONTAINER_TIMEZONE}
            # php runtime   https://www.php.net/manual/zh/ini.list.php
            PHP_DISPLAY_ERRORS: ${PHP_DISPLAY_ERRORS}
            PHP_MEMORY_LIMIT: ${PHP_MEMORY_LIMIT}
            PHP_MAX_EXECUTION_TIME: ${PHP_MAX_EXECUTION_TIME}
            # database
            MYSQL_DATABASE: ${DOCKER_DATABASE_DATABASE}
            MYSQL_USER: ${DOCKER_DATABASE_USERNAME}
            MYSQL_PASSWORD: ${DOCKER_DATABASE_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${DOCKER_DATABASE_ROOT_PASSWORD}
            # PHPSTORM setup for xDebug
            PHP_IDE_CONFIG: serverName=${DOCKER_CONTAINER_NAME}
        volumes:
            - .:/var/www/html/
            - ./docker/php/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
        networks:
            backend:
                ipv4_address: "172.28.0.10"
        mac_address: "02:42:ac:1a:00:01"

    # This references to the Dockerfile in "./docker/composer".
    composer:
        build:
            context: ./docker/composer
            args:
                version: ${DOCKER_COMPOSER_VERSION}
        working_dir: /var/www/html/
        container_name: ${DOCKER_CONTAINER_NAME}.composer
        hostname: backend.${DOCKER_CONTAINER_NAME}.composer
        command: ['docker-setup']
        volumes_from:
            - php
        depends_on:
            - php
        networks:
            - backend

    # This references to the Dockerfile in "./docker/webserver".
    webserver:
        build:
            context: ./docker/webserver
            args:
                version: ${DOCKER_WEBSERVER_VERSION}
        working_dir: /var/www/html/
        container_name: ${DOCKER_CONTAINER_NAME}.webserver
        hostname: backend.${DOCKER_CONTAINER_NAME}.webserver
        restart: unless-stopped
        tty: true
        environment:
            TZ: ${DOCKER_CONTAINER_TIMEZONE}
        volumes:
            - .:/var/www/html/
            - ./docker/webserver/conf.d/:/etc/nginx/conf.d/
        ports:
            - ${DOCKER_WEBSERVER_HTTP_PORT}:80
            - ${DOCKER_WEBSERVER_HTTPS_PORT}:443
        depends_on:
            - php
        networks:
            backend:
                ipv4_address: "172.28.0.11"
        mac_address: "02:42:ac:1a:00:02"

    # This references to the Dockerfile in "./docker/database".
#    database:
#        build:
#            context: ./docker/database
#            args:
#                version: ${DOCKER_DATABASE_VERSION}
#        container_name: ${DOCKER_CONTAINER_NAME}.database
#        hostname: backend.${DOCKER_CONTAINER_NAME}.database
#        environment:
#            TZ: ${DOCKER_CONTAINER_TIMEZONE}
#            MYSQL_DATABASE: ${DOCKER_DATABASE_DATABASE}
#            MYSQL_USER: ${DOCKER_DATABASE_USERNAME}
#            MYSQL_PASSWORD: ${DOCKER_DATABASE_PASSWORD}
#            MYSQL_ROOT_PASSWORD: ${DOCKER_DATABASE_ROOT_PASSWORD}
#        volumes:
#            - database:/var/lib/mysq
#        ports:
#            - ${DOCKER_DATABASE_PORT}:3306
#        depends_on:
#            - php
#        networks:
#            - backend
#
#    # This references to the Dockerfile in "./docker/redis".
#    redis:
#        build:
#            context: ./docker/redis
#            args:
#                version: ${DOCKER_REDIS_VERSION}
#        container_name: ${DOCKER_CONTAINER_NAME}.redis
#        hostname: backend.${DOCKER_CONTAINER_NAME}.redis
#        ports:
#            - ${DOCKER_REDIS_PORT}:6379
#        depends_on:
#            - php
#        networks:
#            - backend


#docker run --rm -it -w /var/www/html --volumes-from upgr8.php upgr8_composer composer create-project laravel/laravel
